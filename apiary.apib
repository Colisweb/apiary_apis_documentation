FORMAT: 1A
HOST: http://sandbox.api.colisweb.com

# Colisweb API v4

Ce document décrit les points d'entrées, appelés **endpoints**, de l'API ainsi que les workflows d'utilisations.   
> **ATTENTION**: Nous nous réservons le droit **d'ajouter** certains attributs tout au long du cycle de vie de cette API.

***
## Autorisations
***
Une clé API est nécessaire pour pouvoir échanger avec l'API.
Pour obtenir une clé, veuillez en faire la demande à support@colisweb.com.

***
## Encodage de caractères
***
Le charset supporté pour les requêtes transmises à l'API est l' **UTF-8**.

***
## Environnements et URL
***
Deux environnements sont disponibles:  

+ **Sandbox**: Environnement "bac à sable" pour vos tests avant mise en production.   
> https://sandbox.api.colisweb.com/4/ **end_point**

+ **Production**: Après validation des tests en sandbox.   
> https://api.colisweb.com/4/ **end_point**

**end_point** = Méthodes décrites dans ce document

> ***Les clés API sont différentes selon les deux environnements***

***
## Glossaire
***
### Entités en entrée
***
Nous gérons des **livraisons** partant d'un **point A (pickup)** et arrivant à un **point B (shipping)**.   

Certaines des clés/valeurs des entités décrites dans cette section peuvent être optionnelles ou requises selon les différents *end_points* de l'API.   
Ces notions de required / optional sont indiqués dans la description des *end_points*.

#### L'entité "Route"
***
Spécifie et constitue les informations sur le point de retrait et le point de livraison.   
+ Une ```Route``` est un Array d'entités Point
    
#### L'entité "Point"
***
Spécifie la nature d'un point ainsi que les informations d'addresse.   
Il peut être soit un "point de retrait" soit un "point de livraison" de la marchandise.   

+ Un ```Point``` est un Hash composé des attributs suivants:
    + ```type``` *(required, string)*... La nature du point, les valeurs peuvent être :
        + **"pickup"** (point de retrait).
        + **"shipping"** (point de livraison).
    + ```location``` *(required, Location entity)*... Informations du point.

#### L'entité "Location"
***
Spécifie les informations d'addresse d'un point.   
Une **Location** est un type abstrait décliné selon l'une de ces trois spécialisations concrétes:   

+ Soit une adresse quelconque avec les attributs suivants: 
    + ```type``` *(required, string = "address")* ... Location de type **"address"**
    + ```society``` *(optional, string)*... Société.
    + ```first_name``` *(optional, string)*... Prénom.
    + ```last_name``` *(required, string)*... Nom (ou concaténation prénom + nom).
    + ```email``` *(required, string)*... Email.
    + ```primary_phone``` *(required, string)*... Numéro de téléphone primaire.
    + ```secondary_phone``` *(optional, string)*... Numéro de téléphone secondaire.
    + ```line1``` *(required, string)*... Adresse de livraison.
    + ```line2``` *(optional, string)*... Complément d'adresse.
    + ```additional_informations``` *(optional, string)*... Informations supplémentaire (digicode, ...)
    + ```postal_code``` *(required, string)*... Code postal.
    + ```city``` *(required, string)*... Ville.
    + ```country``` *(required, string)*... Pays.

+ Soit un magasin/entrepôt référencé dans notre système avec les attributs suivants: 
    + ```type``` *(required, string = "store")*... Location de type **"store"**
    + ```store_code``` *(optional, string)*... Code magasin/entrepôt.  
    
    Nous Réferençons vos magasins dans notre système au moment de la signature du contrat.

+ Soit un code postal avec attributs suivants:
    + ```type``` *(required, string = "city")*... location de type **"city"**
    + ```zip_code``` *(required, string)*... Code postal.  


#### L'entité "Slot"
***
Spécifie le créneaux horaire souhaité pour la livraison de la marchandise.   
+ Un **Slot** est composé des attributs suivants:
    + ```starts_at``` *(datetime)*... Début du créneau horaire.
    + ```size``` *(integer)*... Taille de la plage de livraison (en minutes).

#### L'entité "Packaging"
***
Spécifie les informations du colis constituant la demande de livraison.   
+ Un **Packaging** est composé des attributes suivants:
    + ```global_description``` *(optional, string)*... La description globale du packaging.
    + ```packaging_ref``` *(optional, string)*... Une référence permettant d'identifier spécifiquement le packaging.
    + ```packets_quantity``` *(optional, integer)*... Le nombre de paquets contenu dans le packaging.
    + ```length``` *(optional, float)*... Longueur du packaging.
    + ```width``` *(optional, float)*... Largeur du packaging.
    + ```height``` *(optional, float)*... Hauteur du packaging.
    + ```weight``` *(optional, float)*... Poids du packaging.
    + ```packets``` *(required, array[Packet])*... Les produits composant le colis.
    
#### L'entité "Packet"
***
Spécifie les informations sur un produit du colis   
+ Un **Packet** est composé des attributs suivants:
    + ```description``` *(optional , string)*... La description / référence du paquet.
    + ```sku``` *(optional , string)*... Identifiant unique du produit.
    + ```length``` *(required, float)*... Longueur du produit (en centimètres).
    + ```width``` *(required, float)*.. Largeur du produit (en centimètres).
    + ```height``` *(required, float)*.. Hauteur du produit (en centimètres).
    + ```weight``` *(required, float)*.. Poids du produit (en kilos).

***
### Entités en sortie
***

#### L'entité "status"
***
Spécifie les informations de statuts de livraison
+ Un **status** est composé des attributs suivants:
    + ```global``` *(string)*... statut global de la commande.
    
+ Le statut ```global``` peut prendre les valeurs :
    + *pre_ordered*... pré-commande.
    + *confirmed*... commande confirmée.
    + *canceled*... commande annulée.

***
## Dimensions des colis
***

Un colis est le "conteneur" contenant les produits qui seront livrés.   
Un **colis** correspond à l'entité **Packaging**.   
Un **produit** correspond à l'entité **Packet**.   

Afin de nous transmettre les dimensions de ce que vous voulez faire livrer, deux possibilités s'offrent à vous : 

1. Décrire un "conteneur" étant capable de contenir les produits du panier de votre client.

  Dans ce cas de figure, ils vous faudra impérativement remplir les champs 
  ```packets_quantity```, ```length```, ```width```, ```height```, ```weight``` de l'entité **Packaging**.   

2. Décrire précisement le contenu du panier de votre client, nous laissant le soin de calculer le conteneur le plus adapté.

  Dans ce second cas de figure, il vous faudra impérativement **ne pas** remplir les champs
  ```packets_quantity```, ```length```, ```width```, ```height```, ```weight``` de **Packaging**.   
  Il vous faudra, pour chaque produit, générer une entité **Packet** avec les champs 
  ``length```, ```width```, ```height```, ```weight``` renseignés.

Ces deux solutions sont mutuellement exclusives, la premieère option étant prioritaire sur la seconde.
C'est-à-dire que si les dimensions d'un Packaging sont renseignées alors les Packets seront ignorés.

***
## Formats de dates
***
+ L'API accepte en paramètre d'entrée des dates au format **ISO 8601** avec timezone.   
    Exemple: 
    ```
    2015-04-22T12:00:00+02:00
    ```
+ Toutes les dates renvoyées par l'API le sont en UTC dans le même format   
    Exemple: 
    ```
    2015-04-22T12:00:00+00:00
    ```

***
## Codes erreurs
***
| Error name                | HTTP Status       | Description                       |
| ------------------------  | ----------------  | --------------------------------- |
| wrong_api_key             | 401 Unauthorized  | Clé API manquante / inconnue      |
| missing_parameters        | 400 Bad Request   | Il manque des paramètres          |
| fail_to_confirm_delivery  | 400 Bad Request   | Le commande de livraison a échoué |
| no_delivery_options       | 404 not found     | Aucune disponibilité de livraison |
| missing_delivery          | 404 not found     | Numéro de commande inconnue       |
| delivery_has_expired      | 400 Bad request   | La confirmation de commande survient après le timeout (15 minutes), impossible de confirmer la commande|

# Group Commander une livraison

## Obtenir les options de livraison disponibles [/4/deliveries/options]

end_point : /deliveries/options

Permet de récupérer les options de livraisons disponibles.

### Paramètres de requête

+ ```api_key``` *(required, string)*... Clé API Colisweb.
+ ```slot``` *(optional, Slot entity)*
    + ```size``` *(optional)* Taille de la plage de livraison demandée en minutes. Exemple : 120 pour une livraison en 2h
Ce paramètre permet d'écraser la valeur configurée dans notre système au moment de la contractualisation.
+ ```route``` *(required, Route entity)*
    + ```point``` *(required, Point entity)*
        + ```type``` *(required, Value = pickup)*... Point de **retrait**
        + ```location``` *(required, Location entity)*   
        Le type de la location ne peut être que **"store"**.   
        **Si la location est de type "store" et que la valeur passée à "store_code" est vide, Colisweb sélectionne de lui même le magasin de retrait le plus adapté géographiquement parmis ceux référencés.**
    + ```point``` *(required, Point entity)*
        + ```type``` *(required, Value = shipping)*... Point de **livraison**   
        Le type de la location ne peut être que  **"city"** 
        + ```location``` *(required, Location entity)*
+ ```packaging```*(required, packaging entity)*
    + ```global_description``` *(optional)*
    + ```packets``` *(required)*
        + ```description```(*optional)*
        + ```length``` *(required)*
        + ```width``` *(required)*
        + ```height``` *(required)*
        + ```weight``` *(required)*

### Contenu de la réponse

+ ```now``` *(hash)*: Disponibilité de l'offre "instantanée" (au moment de la requête). Vide si aucune disponibilité.
    + ```available```*(boolean)*... Disponibilité de la livraison "instantanée".
    + ```slot_size``` *(integer)*... Taille du créneau horaire de la livraison "instantanée" (en minutes).
    + ```price``` *(float)*... Coût HT pour ce créneau (en euro).
+ ```calendar``` *(array of hashes)*... . Vide si aucune disponibilité.
    + ```starts_at``` *(datetime)*... Début du créneau horaire de livraison.
    + ```ends_at``` *(datetime)*... Fin du créneau horaire de livraison.
    + ```slot_size``` *(integer)*... Taille du créneau horaire de livraison (en minutes).
    + ```price``` *(float)*... Coût HT de la livraison dans ce créneau (en euro).
  
  
### Exemple de demande d'options en mode "B2C" -> cas d'une livraison depuis un magasin référencé vers un code postal [POST]

+ Request (application/json)

        {
            "api_key": "3025688655a161aeb167b7b33f03c013",
            "slot": {
                "size": 120
            },
            "route": [
                {
                    "type": "pickup",
                    "location": {
                        "type": "store",
                        "store_code": "100001"                        
                    }
                },
                {
                    "type": "shipping",
                    "location": {
                        "type": "city",
                        "zip_code": "75001"                        
                    }
                }
            ],
            "packaging": {
                "global_description": "Ensemble set cuisine",
                "packets": [
                    {
                        "description": "micro-onde",
                        "height": 60,
                        "length": 80,
                        "width": 30,
                        "weight": 2.5
                    },
                    {
                        "description": "Cafetière",
                        "height": 60,
                        "length": 80,
                        "width": 30,
                        "weight": 1.0
                    }
                ]
            }
        }

+ Response 200 (application/json)
  
        {
            "delivery": {
                "now": {
                    "available": true,
                    "slot_size": 120,
                    "price": 16.00
                },
                "calendar": [
                    {
                        "starts_at": "2015-04-22T10:00:00+02:00",
                        "ends_at": "2015-04-22T12:00:00+02:00",
                        "slot_size": 120,
                        "price": 16.00
                    },
                    {
                        "starts_at": "2015-04-22T12:00:00+02:00",
                        "ends_at": "2015-04-22T14:00:00+02:00",
                        "slot_size": 120,
                        "price": 8.00
                    },
                    {
                        "starts_at": "2015-04-22T14:00:00+02:00",
                        "ends_at": "2015-04-22T17:00:00+02:00",
                        "slot_size": 180,
                        "price": 10.00
                    },
                    {
                        "starts_at": "2015-04-23T10:00:00+02:00",
                        "ends_at": "2015-04-23T12:00:00+02:00",
                        "slot_size": 120,
                        "price": 16.00
                    },
                    {
                        "starts_at": "2015-04-23T12:00:00+02:00",
                        "ends_at": "2015-04-23T14:00:00+02:00",
                        "slot_size": 120,
                        "price": 8.00
                    },
                    {
                        "starts_at": "2015-04-23T14:00:00+02:00",
                        "ends_at": "2015-04-23T17:00:00+02:00",
                        "slot_size": 180,
                        "price": 10.00
                    }
                ]
            }
        }

## Pre-commander une livraison [/4/deliveries/book]

End_point : /deliveries/book

Permet d'effectuer une pré-commande de livraison.   
Cette pré-commande sera ensuite à confirmer dans la méthode [Finaliser une commande de livraison](#reference/commander-une-livraison/finaliser-une-commande-de-livraison).

### Paramètres de requête

+ ```api_key``` *(required, string)*... Clé API Colisweb
+ ```slot``` *(required, Slot entity)*... Créneau de livraison demandé.
    + ```starts_at``` *(required, datetime)*... Date et heure de début de la plage de livraison.   
    Pour passer une demande en mode "Instantané", passez la date / heure actuelle.   
    Vous pouvez passer la valeur que vous souhaitez, cependant seuls les valeurs fournies par le endpoint **[options de livraison](#reference/commander-une-livraison/obtenir-les-options-de-livraison-disponibles)** garantissent une réponse positive de l'API.   
    + ```size``` *(required, integer)*... Taille de la plage de livraison demandée (en minutes).   
    Vous pouvez passer la valeur que vous souhaitez, cependant seuls les valeurs fournies par le endpoint **[options de livraison](#reference/commander-une-livraison/obtenir-les-options-de-livraison-disponibles)** garantissent une réponse positive de l'API.
+ ```route``` *(required, Route entity)*
    + ```point``` *(required, Point entity)*
        + ```type``` *(required, Value = pickup)*... Point de **retrait**
        + ```location``` *(required, Location entity)*... Le type de la location ne peut être que **"address"** ou **"store"**   
        **Si la location est de type "store" et que la valeur passée à "store_code" est nulle, Colisweb sélectionne de lui même le magasin de retrait le plus adapté géographiquement parmis ceux référencés.**
    + ```point``` *(required, Point entity)*
        + ```type``` *(required, Value = shipping)*... Point de **livraison**
        + ```location``` *(required, Location entity)*... Le type de la location ne peut être que **"address"** ou **"store"**   
        **Si la location est de type "store", alors la valeur passée à "store_code" doit être obligatoirement renseignée**
+ ```packaging```*(required, packaging entity)*
    + ```global_description``` *(optional)*
    + ```packets``` *(required)*
        + ```description```(*optional)*
        + ```length``` *(required)*
        + ```width``` *(required)*
        + ```height``` *(required)*
        + ```weight``` *(required)*

### Contenu de la réponse

+ ```delivery``` *(hash)*... Informations sur la livraison créée
    + ```uuid``` *(string)*... Identifiant unique de la livraison.   
    **Cet identifiant vous sera nécessaire, notamment, pour effectuer la confirmation de la commande.**
    + ```status```(hash, Status entity)... statuts de commande et de livraison.
        + ```global```(string = "pre_ordered")
    + ```slot``` *(hash)*... Informations de la plage horaire commandée.
        + ```starts_at``` *(datetime)*... Date et heure de début du créneau horaire demandé.
        + ```ends_at``` *(datetime)*... Date et heure de fin du créneau horaire demandé.
        + ```size``` *(integer)*... Taille du créneau horaire demandé (en minutes).
        + ```price``` *(float)*... Coût HT de la livraison (en euro).

## Exemple de pré-commande de livraison en mode "B2C" -> cas d'une livraison depuis un magasin référencé vers une adresse [POST]

+ Request (application/json)

        {
            "api_key": "3025688655a161aeb167b7b33f03c013",
            "slot": {
                "starts_at": "2015-04-22T10:00:00+02:00",
                "size": 120
            },
            "route": [
                {
                    "type": "pickup",
                    "location": {
                        "type": "store",
                        "store_code": "100001"                        
                    }
                },
                {
                    "type": "shipping",
                    "location": {
                        "type": "address",
                        "society": "Twelve factors & C",
                        "first_name": "Helmout",
                        "last_name": "Ardelpik",
                        "email": "helmoutardelpik@gmail.com",
                        "primary_phone": "0694385693",
                        "secondary_phone": "0354678942",
                        "line1": "165, avenue des champs Elysées",
                        "line2": "Batiment Leblanc",
                        "additional_informations": "Digicode B345, 3 éme etage",
                        "postal_code": "75001",
                        "city": "Paris",
                        "country": "France"                        
                    }
                }
            ],
            "packaging": {
                "global_description": "Ensemble set cuisine",
                "packets": [
                    {
                        "description": "micro-onde",
                        "height": 60,
                        "length": 80,
                        "width": 30,
                        "weight": 2.5
                    },
                    {
                        "description": "Cafetière",
                        "height": 60,
                        "length": 80,
                        "width": 30,
                        "weight": 1.0
                    }
                ]
            }
        }

+ Response 201 (application/json)

        {
            "delivery": {
                "uuid": "03355b96-7195-411a-9c3f-3a6a4b6997ce",
                "status": {
                    "global": "pre_ordered"
                },
                "slot": {
                    "starts_at": "2015-04-22T10:00:00+02:00",
                    "ends_at": "2015-04-22T12:00:00+02:00",
                    "size": 120,
                    "price": 5.00
                }
            }
        }


# Finaliser une commande de livraison [/4/deliveries/{uuid}/confirm]

end_point : /deliveries/{uid}/confirm

Une fois que vous avez pré-commandé une livraison et que l'API vous a retourné le ```uid``` de votre commande, vous devez la confirmer pour finaliser votre commande.   
Le paramètre ```uid``` est à passer dans l'url de la requête.


***Attention***: Il n'est pas possible de confirmer une commande au delà de 15 minutes après le début du créneau horaire.   
Au delà, une erreur ```delivery_has_expired``` est renvoyée.

## Paramètres de requête

+ ```api_key``` *(required, string)*: Clé API Colisweb
+ ```primary_order_reference:``` *(required, string)*: Votre référence commande primaire.   
**Cette référence permet au transporteur d'identifier le colis au moment de la récupération du colis.**
+ ```secondary_order_reference``` *(optional, string)*: Votre référence commande secondaire.

## Contenu de la réponse

+ ```delivery``` *(hash)*: Informations sur la livraison créée
    + ```uuid``` *(string)*... Identifiant unique de la livraison.  
    + ```status```(hash, Status entity)... statuts de commande et de livraison.
        + ```global```(string = "confirmed")... Commande confirmée

## Voir un exemple de requête [PUT]

+ Parameters
    + uuid - Identifiant unique de la demande de livraison obtenue lors de la pré-commande

+ Request (application/json)

        {
            "api_key": "3025688655a161aeb167b7b33f03c013",
            "primary_order_reference": "R10390",
            "secondary_order_reference": "987663"
        }

+ Response 200 (application/json)
        
        {
            "delivery": {
                "uuid": "03355b96-7195-411a-9c3f-3a6a4b6997ce",
                "status": {
                    "global": "confirmed"
                }
            }
        }

# Group Récupération des statuts des commandes

La récupération des statuts des commandes se fait via un Webhook.   
Le Webhook vous permet d'être informé en temps réél de chaque changement des statuts d'une commande.   

## Webhooks
1 - Vous nous fournissez une URL (contacter directement Colisweb).    
2 - A chaque changement de statut d'une commande, notre système envoie une requête `HTTP POST` sur votre URL.   

<strong>Note</strong> : En cas d'échec de la connexion, le système effectue jusque 3 tentatives supplémentaires à 30 secondes d'intervalle.

## Format de donné envoyé
```
{   
    "delivery": {
        uuid: "identifiant unique de la commande",
        primary_order_reference: "reference primaire de la commande",
        secondary_order_reference: "reference secondaire de la commande"
    },
    delivery_statuses: {
        global: "statut global de la commande",
        retailer: "statut magasin de la commande", 
        carrier: "statut transporteur de la commande"
        
    }
}
```
## Détail des statuts
Les différents statuts susceptibles de vous être renvoyés sont :

### global (statut global automatique)
- `pre_order` = pré-commande
- `confirmed` = commande confirmée
- `canceled`  = commande annulée

### retailer (statut géré par le magasin)
- `preparing` = colis à préparer / en préparation
- `ready_to_pick_up`= colis prêt à être retiré
- `picked_up`= colis retiré
- `package_returned`= colis retourné en magasin

### carrier (statut géré par le transporteur chargé de la livraison)
- `package_withdrawn` = colis retiré
- `package_returned`= colis retourné
- `delivered` = colis livré