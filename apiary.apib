FORMAT: 1A
HOST: http://sandbox.api.colisweb.com

# Colisweb API v4

Ce document décrit les points d'entrées, appelés **endpoints**, de l'API ainsi que les workflows d'utilisations.   
> **ATTENTION**: Nous nous réservons le droit **d'ajouter** certains attributs tout au long du cycle de vie de cette API.

***
## Autorisations
***
Une clé API est nécessaire pour pouvoir échanger avec l'API.   
Pour obtenir une clé, veuillez en faire la demande à support@colisweb.com.

***
## Environnements et URL
***

Deux environnements sont disponibles:  

+ **Sandbox**: Environnement "bac à sable" pour vos tests avant mise en production.   
> http://sandbox.api.colisweb.com/4/ **end_point**

+ **Production**: Après validation des tests en sandbox.   
> http://api.colisweb.com/4/ **end_point**

**end_point** = Méthodes décrites dans ce document

> ***Les clés API sont différentes selon les deux environnements***

***
## Glossaire
***
### Entités en entrée
***
Nous gérons des **livraisons** partant d'un **point A (pickup)** et arrivant à un **point B (shipping)**.   

Certaines des clés/valeurs des entités décrites dans cette section peuvent être optionnelles ou requises selon les différents *end_points* de l'API.   
Ces notions de required / optional sont indiqués dans la description des *end_points*.

#### L'entité "Route"
***
Spécifie et constitue les informations sur le point de retrait et le point de livraison.   
+ Une ```Route``` est un array d'entités Point
    
#### L'entité "Point"
***
Spécifie la nature d'un point ainsi que les informations d'addresse.   
Il peut être soit un "point de retrait" soit un "point de livraison" de la marchandise.   

+ Un ```Point``` est composé des attributs suivants:
    + ```type``` *(required, string)*... La nature du point, les valeurs peuvent être :
        + **"pickup"** (point de retrait).
        + **"shipping"** (point de livraison).
    + ```location``` *(required, Location)*... Informations du point.

#### L'entité "Location"
***
Spécifie les informations d'addresse d'un point.   
Une **Location** est un type abstrait décliné selon l'une de ces trois spécialisations concrétes:   

+ Soit une adresse quelconque avec les attributs suivants: 
    + ```type``` *(required, string = "address")* ... Location de type **"address"**
    + ```society``` *(optional, string)*... Société.
    + ```first_name``` *(optional, string)*... Prénom.
    + ```last_name``` *(required, string)*... Nom (ou concaténation prénom + nom).
    + ```email``` *(required, string)*... Email.
    + ```primary_phone``` *(required, string)*... Numéro de téléphone primaire.
    + ```secondary_phone``` *(optional, string)*... Numéro de téléphone secondaire.
    + ```line1``` *(required, string)*... Adresse de livraison.
    + ```line2``` *(optional, string)*... Complément d'adresse.
    + ```additional_informations``` *(optional, string)*... Informations supplémentaire (digicode, ...)
    + ```postal_code``` *(required, string)*... Code postal.
    + ```city``` *(required, string)*... Ville.
    + ```country``` *(required, string)*... Pays.

+ Soit un magasin/entrepôt référencé dans notre système avec les attributs suivants: 
    + ```type``` *(required, string = "store")*... Location de type **"store"**
    + ```store_code``` *(optional, string)*... Code magasin/entrepôt.  
    
    Nous Réferençons vos magasins dans notre système au moment de la signature du contrat.

+ Soit un code postal avec attributs suivants:
    + ```type``` *(required, string = "city")*... location de type **"city"**
    + ```postal_code``` *(required, string)*... Code postal.  


#### L'entité "Slot"
***
Spécifie le créneaux horaire souhaité pour la livraison de la marchandise.   
+ Un **Slot** est composé des attributs suivants:
    + ```starts_at``` *(required, datetime)*... Début du créneau horaire.
    + ```size``` *(required, integer)*... Taille de la plage de livraison (en minutes).

#### L'entité "Packaging"
***
Spécifie les informations de l'ensemble du/des colis constituant la demande de livraison.   
+ Un **Packaging** est composé des attributes suivants:
    + ```global_description``` *(optional, string)*... La description globale du packaging.
    + ```packets``` *(required, array[Packet])*... Les paquets composant le packaging.

#### L'entité "Packet"
***
Spécifie les informations sur un colis   
+ Un **Packet** est composé des attributs suivants:
    + ```description``` *(optional , string)*... La description / référence du paquet.
    + ```length``` *(required, integer)*... Longueur du colis (en millimètres).
    + ```width``` *(required, integer)*.. Largeur du colis (en millimètres).
    + ```height``` *(required, integer)*.. Hauteur du colis (en millimètres).
    + ```weight``` *(required, integer)*.. Poids du colis (en grammes).

***
### Entités en sortie
***

#### L'entité "status"
***
Spécifie les informations de statuts de livraison
+ Un **status** est composé des attributs suivants:
    + ```global``` *(string)*... statut global de la commande.
    + ```retailer``` *(string)*... statut magasin de la commande.
    + ```carrier``` *(string)*... statut transporteur de la commande.

+ Le statut ```global peut être :
    + *pre_ordered*... pré-commande.
    + *confirmed*... commande confirmée.
    + *canceled*... commande annulée.

***
### Formats de dates
***
Les dates sont au format **ISO 8601 avec indication de fuseau horaire**.   
Exemple: 
```
2015-04-22T12:00:00+02:00
```
***
### Codes erreurs
***
| Error name                | HTTP Status       | Description                       |
| ------------------------  | ----------------  | --------------------------------- |
| wrong_api_key             | 401 Unauthorized  | Clé API manquante / inconnue      |
| missing_parameters        | 400 Bad Request   | Il manque des paramètres          |
| fail_to_confirm_delivery  | 400 Bad Request   | Le commande de livraison a échoué |
| no_delivery_options       | 404 not found     | Aucune disponibilité de livraison |
| missing_delivery          | 404 not found     | Numéro de commande inconnue       |
| delivery_has_expired      | 400 Bad request   | La confirmation de commande survient après le timeout (15 minutes), impossible de confirmer la commande|

# Group Commander une livraison

## Obtenir les options de livraison disponibles [/deliveries/options]

Permet de récupérer les options de livraisons disponibles.

### Paramètres de requête

+ ```api_key``` *(required, string)*... Clé API Colisweb.
+ ```slot``` *(optional, Slot entity)*
    + ```size``` *(optional)* Taille de la plage de livraison demandée en minutes. Exemple : 120 pour une livraison en 2h
Ce paramètre permet d'écraser la valeur configurée dans notre système au moment de la contractualisation.
+ ```route``` *(required, Route entity)*
    + ```point``` *(required, Point entity)*
        + ```type``` *(required, Value = pickup)*... Point de **retrait**
        + ```location``` *(required, Location entity)*
        **Si la location est de type "store" et que la valeur passée à "store_code" est nulle ou vide, Colisweb sélectionne de lui même le magasin de retrait le plus adapté géographiquement parmis ceux référencés.**
    + ```point``` *(required, Point entity)*
        + ```type``` *(required, Value = shipping)*... Point de **livraison**
        + ```location``` *(required, Location entity)*
+ ```packaging```*(required, packaging entity)*
    + ```global_description``` *(optional)*
    + ```packets``` *(required)*
        + ```description```(*optional)*
        + ```length``` *(required)*
        + ```width``` *(required)*
        + ```height``` *(required)*
        + ```weight``` *(required)*

### Contenu de la réponse

+ ```now``` *(hash)*: Disponibilité de l'offre "instantanée" (au moment de la requête). Vide si aucune disponibilité.
    + ```available```*(boolean)*... Disponibilité de la livraison "instantanée".
    + ```slot_size``` *(integer)*... Taille du créneau horaire de la livraison "instantanée" (en minutes).
    + ```price``` *(float)*... Coût HT pour ce créneau (en euro).
+ ```calendar``` *(array of hashes)*... . Vide si aucune disponibilité.
    + ```starts_at``` *(datetime UTC)*... Début du créneau horaire de livraison.
    + ```ends_at``` *(datetime UTC)*... Fin du créneau horaire de livraison.
    + ```slot_size``` *(integer)*... Taille du créneau horaire de livraison (en minutes).
    + ```price``` *(float)*... Coût HT de la livraison dans ce créneau (en euro).
  
  
### Exemple de demande d'options en mode "B2C" -> cas d'une livraison depuis un magasin référencé vers un code postal [POST]

+ Request (application/json)

        {
            "api_key": "3025688655a161aeb167b7b33f03c013",
            "slot": {
                "size": 120
            },
            "route": [
                {
                    "type": "pickup",
                    "location": {
                        "type": "store",
                        "store_code": "100001"                        
                    }
                },
                {
                    "type": "shipping",
                    "location": {
                        "type": "city",
                        "postal_code": "75001"                        
                    }
                },
            ],
            "packaging": {
                "global_description": "Ensemble set cuisine",
                "packets": [
                    {
                        "description": "micro-onde",
                        "height": 140,
                        "length": 165,
                        "width": 130,
                        "weight": 1000
                    },
                    {
                        "description": "Cafetière",
                        "height": 245,
                        "length": 260,
                        "width": 255,
                        "weight": 2550
                    }
                ]
            }
        }

+ Response 200 (application/json)

        {
            "now": {
                "available": true,
                "slot_size": 120,
                "price": 16.00
            },
            "calendar": [
                {
                    "starts_at": "2015-04-22T10:00:00+02:00",
                    "ends_at": "2015-04-22T12:00:00+02:00",
                    "slot_size": 120,
                    "price": 16.00
                },
                {
                    "starts_at": "2015-04-22T12:00:00+02:00",
                    "ends_at": "2015-04-22T14:00:00+02:00",
                    "slot_size": 120,
                    "price": 8.00
                },
                {
                    "starts_at": "2015-04-22T14:00:00+02:00",
                    "ends_at": "2015-04-22T17:00:00+02:00",
                    "slot_size": 180,
                    "price": 10.00
                },
                {
                    "starts_at": "2015-04-23T10:00:00+02:00",
                    "ends_at": "2015-04-23T12:00:00+02:00",
                    "slot_size": 120,
                    "price": 16.00
                },
                {
                    "starts_at": "2015-04-23T12:00:00+02:00",
                    "ends_at": "2015-04-23T14:00:00+02:00",
                    "slot_size": 120,
                    "price": 8.00
                },
                {
                    "starts_at": "2015-04-23T14:00:00+02:00",
                    "ends_at": "2015-04-23T17:00:00+02:00",
                    "slot_size": 180,
                    "price": 10.00
                }
            ]
        }

## Pre-commander une livraison [/deliveries/book]

Permet d'effectuer une pré-commande de livraison.   
Cette pré-commande sera ensuite à confirmer dans la méthode [Finaliser une commande de livraison](#reference/commander-une-livraison/finaliser-une-commande-de-livraison).

### Paramètres de requête

+ ```api_key``` *(required, string)*... Clé API Colisweb
+ ```slot``` *(required, Slot entity)*... Créneau de livraison demandé.
    + ```starts_at``` *(required, datetime UTC)*... Date et heure de début de la plage de livraison.   
    Pour passer une demande en mode "Instantané", passez la date / heure actuelle.   
    Vous pouvez passer la valeur que vous souhaitez, cependant seuls les valeurs fournies par le endpoint **[options de livraison](#reference/commander-une-livraison/obtenir-les-options-de-livraison-disponibles)** garantissent une réponse positive de l'API.   
    + ```size``` *(required, integer)*... Taille de la plage de livraison demandée (en minutes).   
    Vous pouvez passer la valeur que vous souhaitez, cependant seuls les valeurs fournies par le endpoint **[options de livraison](#reference/commander-une-livraison/obtenir-les-options-de-livraison-disponibles)** garantissent une réponse positive de l'API.
+ ```route``` *(required, Route entity)*
    + ```point``` *(required, Point entity)*
        + ```type``` *(required, Value = pickup)*... Point de **retrait**
        + ```location``` *(required, Location entity)*... Le type de la location ne peut être que **"address"** ou **"store"**   
        **Si la location est de type "store" et que la valeur passée à "store_code" est nulle, Colisweb sélectionne de lui même le magasin de retrait le plus adapté géographiquement parmis ceux référencés.**
    + ```point``` *(required, Point entity)*
        + ```type``` *(required, Value = shipping)*... Point de **livraison**
        + ```location``` *(required, Location entity)*... Le type de la location ne peut être que **"address"** ou **"store"**   
        **Si la location est de type "store", alors la valeur passée à "store_code" doit être obligatoirement renseignée**
+ ```packaging```*(required, packaging entity)*
    + ```global_description``` *(optional)*
    + ```packets``` *(required)*
        + ```description```(*optional)*
        + ```length``` *(required)*
        + ```width``` *(required)*
        + ```height``` *(required)*
        + ```weight``` *(required)*

### Contenu de la réponse

+ ```delivery``` *(hash)*... Informations sur la livraison créée
    + ```delivery_uid``` *(string)*... Identifiant unique de la livraison.   
    **Cet identifiant vous sera nécessaire, notamment, pour effectuer la confirmation de la commande.**
    + ```status```(hash, Status entity)... statuts de commande et de livraison.
        + ```global```(string = "pre_ordered")
    + ```slot``` *(hash)*... Informations de la plage horaire commandée.
        + ```starts_at``` *(datetime UTC)*... Date et heure de début du créneau horaire demandé.
        + ```ends_at``` *(datetime UTC)*... Date et heure de fin du créneau horaire demandé.
        + ```size``` *(integer)*... Taille du créneau horaire demandé (en minutes).
        + ```price``` *(float)*... Coût HT de la livraison (en euro).

## Exemple de pré-commande de livraison en mode "B2C" -> cas d'une livraison depuis un magasin référencé vers un code postal [POST]

+ Request (application/json)

        {
            "api_key": "3025688655a161aeb167b7b33f03c013",
            "slot": {
                "starts_at": "2015-04-22T10:00:00+02:00",
                "slot_size": 120
            },
            "route": [
                {
                    "type": "pickup",
                    "location": {
                        "type": "store",
                        "store_code": "100001"                        
                    }
                },
                {
                    "type": "shipping",
                    "location": {
                        "type": "address",
                        "society": "Twelve factors & C",
                        "first_name": "Helmout",
                        "last_name": "Ardelpik",
                        "email": "helmoutardelpik@gmail.com",
                        "primary_phone": "0694385693",
                        "secondary_phone": "0354678942",
                        "line1": "165, avenue des champs Elysées",
                        "line2": "Batiment Leblanc",
                        "additional_informations": "Digicode B345, 3 éme etage",
                        "postal_code": "75001",
                        "city": "Paris",
                        "country": "France"                        
                    }
                },
            ],
            "packaging": {
                "global_description": "Ensemble set cuisine",
                "packets": [
                    {
                        "description": "micro-onde",
                        "height": 140,
                        "length": 170,
                        "width": 165,
                        "weight": 1000
                    },
                    {
                        "description": "Cafetière",
                        "height": 245,
                        "length": 270,
                        "width": 265,
                        "weight": 2550
                    }
                ]
            }
        }

+ Response 201 (application/json)

        {
            "delivery": {
                "delivery_uid": "03355b96-7195-411a-9c3f-3a6a4b6997ce",
                "status": {
                    "global": "pre_ordered"
                },
                "slot": {
                    "starts_at": "2015-04-22T10:00:00+02:00",
                    "ends_at": "2015-04-22T12:00:00+02:00",
                    "size": 120,
                    "price": 5.00
                }
            }
        }


# Finaliser une commande de livraison [/deliveries/{delivery_uid}/confirm]

Une fois que vous avez pré-commandé une livraison et que l'API vous a retourné le ```delivery_uid``` de votre commande, vous devez la confirmer pour finaliser votre commande.

***Attention***: Un maximum de **15 minutes** est autorisé entre la pré-commande et la confirmation de la commande.   
Au delà, une erreur ```delivery_has_expired``` est renvoyée.

## Paramètres de requête

+ ```api_key``` *(required, string)*: Clé API Colisweb
+ ```primary_order_reference:``` *(required, string)*: Votre référence commande primaire.   
**Cette référence permet au transporteur d'identifier le colis au moment de la récupération du colis.**
+ ```secondary_order_reference``` *(optional, string)*: Votre référence commande secondaire.

## Contenu de la réponse

+ ```delivery``` *(hash)*: Informations sur la livraison créée
    + ```delivery_uid``` *(string)*... Identifiant unique de la livraison.  
    + ```status```(hash, Status entity)... statuts de commande et de livraison.
        + ```global```(string = "confirmed")... Commande confirmée
    + ```slot``` *(hash)*... Informations sur la plage horaire demandée.
        + ```starts_at``` *(datetime UTC)*... Date et heure de début du créneau horaire demandé.
        + ```ends_at``` *(datetime UTC)*... Date et heure de fin du créneau horaire demandé.
        + ```size``` *(integer)*.... Taille du créneau horaire demandé (en minutes).
        + ```price``` *(float)*... Coût HT de la livraison (en euro).

## Voir un exemple de requête [PUT]

+ Parameters
    + delivery_uid - Identifiant unique de la demande de livraison obtenue lors de la pré-commande

+ Request (application/json)

        {
            "api_key": "3025688655a161aeb167b7b33f03c013",
            "primary_order_reference:": "R10390",
            "secondary_order_reference": "987663"
        }

+ Response 200 (application/json)
        
        {
            "delivery": {
                "delivery_uid": "03355b96-7195-411a-9c3f-3a6a4b6997ce",
                "status": {
                    "global": "confirmed"
                }
            }
        }
